#开启调试模式
debug=true

#配置server 端口
server.port=8088

#配置日志
logging.level.web=warn
logging.level.root=warn
logging.level.sql=debug
logging.pattern.dateformat=yyyy-MM-dd-HH-mm
logging.file=d://log/log1.txt


#配置数据库 默认使用HikariCP
#指定使用连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc\:mysql\:192.168.1.209:3306:zhucai_db_20190130?useUnicode\=true&characterEncoding\=UTF-8
spring.datasource.username=root
spring.datasource.password=jszc1239
spring.datasource.driver-class-name=com.alibaba.druid.proxy.DruidDriver
spring.datasource.name=duridDatasource
#初始化的大小 druid
spring.datasource.druid.initial-size=1
#最大连接池数量
spring.datasource.druid.max-active=8
#最大等待时间
spring.datasource.druid.max-wait=60000
#是否缓存preparement MySQL下最好关闭 oracle下可开启
spring.datasource.druid.pool-prepared-statements=false
#校验sql是否为查询语句
spring.datasource.druid.validation-query=find
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
spring.datasource.druid.filters=stat,log4,wall
#配置自定义过滤器 com.alibaba.druid.filter.Filter 的子类
#spring.datasource.druid.proxy-filters=

#配置Druid的日志输出
spring.datasource.druid.filter.slf4j.enabled=true 
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false 
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false 
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false 
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false

#配置编译格式
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true

#配置spring MVC相关
spring.mvc.view.prefix=/view
spring.mvc.view.suffix=.jsp


